# Copyright 2023 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Disable NGSIv1 CLI

--SHELL-INIT--
dbInit CB
brokerStart CB 0 IPV4 -logDeprecate -statCounters

--SHELL--

#
# Note there is not a "Update registration using legacyForwarding mode"
# as the registrations update operation is not implemented (issue #3007)
#
# 01. Query E1-T1
# 02. GET /v1/contextEntities/E/attributes/A
# 03. Create entity using NGSIv1 and geo:point
# 04. Create entity using NGSIv2 and geo:point
# 05. Create registration using legacyForwarding mode
# 06. Retrieve registrations (which uses legacyForwarding mode)
# 07. Forwarded query using legacyForwarding mode
# 08. Update query using legacyForwarding mode
# 09. Create subscription using attrsFormat legacy
# 10. Retrieve subscriptions (which uses attrsFormat legacy)
# 11. Update subscription using attrsFormat legacy
# 12. Trigger notification using attrsFormat legacy
# 13. Get WARNING trace in logs
# 14. Get statistics and see deprecatedFeatures counters
#

echo "01. Query E1-T1"
echo "==============="
payload='{
  "entities": [
    {
      "type": "T1",
      "id": "E1"
    }
  ]
}'
orionCurl --url /v1/queryContext --payload "${payload}"
echo
echo


echo "02. GET /v1/contextEntities/E/attributes/A"
echo "=========================================="
orionCurl --url /v1/contextEntities/E/attributes/A
echo
echo


echo "03. Create entity using NGSIv1 and geo:point"
echo "============================================"
payload='{
  "contextElements": [
  {
    "type": "City",
    "isPattern": "false",
    "id": "Barcelona",
    "attributes": [
    {
      "name": "location",
      "type": "geo:point",
      "value": "40.418889, -3.691944"
    }
    ]
  }
  ],
  "updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "04. Create entity using NGSIv2 and geo:point"
echo "============================================"
payload='{
  "id": "Sevilla",
  "type": "City",
  "location": {
      "type": "geo:point",
      "value": "40.418889, -3.691944"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "05. Create registration using legacyForwarding mode"
echo "==================================================="
payload='{
   "dataProvided": {
     "entities": [
       {
         "id": "E1",
         "type": "T1"
       }
     ],
     "attrs": [ "A1" ]
   },
   "provider": {
     "http": {
       "url": "http://localhost:'${CP1_PORT}'/v2"
     },
     "legacyForwarding": true
   },
   "status": "active"
}'
orionCurl --url /v2/registrations --payload "$payload" 
echo
echo


REG_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "06. Retrieve registrations (which uses legacyForwarding mode)"
echo "============================================================="
orionCurl --url /v2/registrations
echo
echo


echo "07. Forwarded query using legacyForwarding mode"
echo "==============================================="
orionCurl --url /v2/entities/E1/attrs/A1?type=T1
echo
echo


echo "08. Update query using legacyForwarding mode"
echo "============================================"
payload='{
  "value": 1,
  "type": "Number"
}'
orionCurl --url /v2/entities/E1/attrs/A1?type=T1 -X PUT --payload "$payload"
echo
echo


echo "09. Create subscription using attrsFormat legacy"
echo "================================================"
payload='{
  "subject": {
    "entities": [
      {
        "id": "E2",
        "type": "T2"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    },
    "attrsFormat": "legacy"
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "10. Retrieve subscriptions (which uses attrsFormat legacy)"
echo "=========================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "11. Update subscription using attrsFormat legacy"
echo "================================================"
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    },
    "attrsFormat": "legacy"
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID -X PATCH --payload "$payload"
echo
echo


echo "12. Trigger notification using attrsFormat legacy"
echo "================================================="
payload='{
  "id": "E2",
  "type": "T2",
  "A": {
    "value": 1,
    "type": "Number"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "13. Get WARNING trace in logs"
echo "============================="
cat /tmp/contextBroker.log | grep 'WARN' | awk -F 'msg=' '{print $2}' | sed -e "s/$REG_ID/REG_ID/g" | sed -e "s/$SUB_ID/SUB_ID/g"
echo
echo


echo "14. Get statistics and see deprecatedFeatures counters"
echo "======================================================"
orionCurl --url /statistics
echo
echo


--REGEXPECT--
01. Query E1-T1
===============
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 70

{
    "errorCode": {
        "code": "404",
        "reasonPhrase": "No context element found"
    }
}


02. GET /v1/contextEntities/E/attributes/A
==========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 98

{
    "statusCode": {
        "code": "404",
        "details": "Entity id: /E/",
        "reasonPhrase": "No context element found"
    }
}


03. Create entity using NGSIv1 and geo:point
============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 207

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "name": "location",
                        "type": "geo:point",
                        "value": ""
                    }
                ],
                "id": "Barcelona",
                "isPattern": "false",
                "type": "City"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


04. Create entity using NGSIv2 and geo:point
============================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/Sevilla?type=City
Content-Length: 0



05. Create registration using legacyForwarding mode
===================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Content-Length: 0



06. Retrieve registrations (which uses legacyForwarding mode)
=============================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 233

[
    {
        "dataProvided": {
            "attrs": [
                "A1"
            ],
            "entities": [
                {
                    "id": "E1",
                    "type": "T1"
                }
            ]
        },
        "id": "REGEX([0-9a-f\-]{24})",
        "provider": {
            "http": {
                "url": "http://localhost:9801/v2"
            },
            "legacyForwarding": true,
            "supportedForwardingMode": "all"
        },
        "status": "active"
    }
]


07. Forwarded query using legacyForwarding mode
===============================================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


08. Update query using legacyForwarding mode
============================================
HTTP/1.1 404 Not Found
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 95

{
    "description": "The requested entity has not been found. Check type and id",
    "error": "NotFound"
}


09. Create subscription using attrsFormat legacy
================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Content-Length: 0



10. Retrieve subscriptions (which uses attrsFormat legacy)
==========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 288

[
    {
        "id": "REGEX([0-9a-f\-]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "legacy",
            "covered": false,
            "http": {
                "url": "http://localhost:1234"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "id": "E2",
                    "type": "T2"
                }
            ]
        }
    }
]


11. Update subscription using attrsFormat legacy
================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



12. Trigger notification using attrsFormat legacy
=================================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/entities/E2?type=T2
Content-Length: 0



13. Get WARNING trace in logs
=============================
Deprecated NGSIv1 request received: POST /v1/queryContext, request payload (48 bytes): { "entities": [ { "type": "T1", "id": "E1" } ] }, response code: 200
Deprecated NGSIv1 request received: GET /v1/contextEntities/E/attributes/A, response code: 200
Deprecated usage of geo:point detected in attribute location at entity update, please use geo:json instead
Deprecated NGSIv1 request received: POST /v1/updateContext, request payload (208 bytes): { "contextElements": [ { "type": "City", "isPattern": "false", "id": "Barcelona", "attributes": [ { "name": "location", "type": "geo:point", "value": "40.418889, -3.691944" } ] } ], "updateAction": "APPEND" }, response code: 200
Deprecated usage of geo:point detected in attribute location at entity update, please use geo:json instead
Deprecated usage of legacyForwarding mode in registration creation (regId: REG_ID)
Deprecated usage of legacyForwarding mode detected in existing registration (regId: REG_ID)
Deprecated usage of legacyForwarding mode in query forwarding operation (regId: REG_ID)
Raising alarm ForwardingError localhost:9801/v2/queryContext: forwarding failure for sender-thread: Couldn't connect to server
Deprecated usage of legacyForwarding mode in update forwarding operation (regId: REG_ID)
Raising alarm ForwardingError localhost:9801/v2/updateContext: forwarding failure for sender-thread: Couldn't connect to server
Raising alarm BadInput 127.0.0.1: The requested entity has not been found. Check type and id
Releasing alarm BadInput 127.0.0.1
Deprecated usage of notification legacy format in subscription creation (subId: SUB_ID)
Deprecated usage of notification legacy format detected in existing subscription (subId: SUB_ID)
Deprecated usage of notification legacy format in subscription modification (subId: SUB_ID)
Deprecated usage of notification legacy format in notification (subId: SUB_ID)
Raising alarm NotificationError localhost:1234/: notification failure for queue worker: Couldn't connect to server


14. Get statistics and see deprecatedFeatures counters
======================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 566

{
    "counters": {
        "deprecatedFeatures": {
            "geoFormat": 2,
            "ngsiv1Forwarding": 4,
            "ngsiv1Requests": 3
        },
        "jsonRequests": 8,
        "noPayloadRequests": 5,
        "requests": {
            "/statistics": {
                "GET": 1
            },
            "/v2/entities": {
                "POST": 2
            },
            "/v2/entities/{id}/attrs/{name}": {
                "GET": 1,
                "PUT": 1
            },
            "/v2/registrations": {
                "GET": 1,
                "POST": 1
            },
            "/v2/subscriptions": {
                "GET": 1,
                "POST": 1
            },
            "/v2/subscriptions/{id}": {
                "PATCH": 1
            }
        },
        "requestsLegacy": {
            "/v1/contextEntities/{id}/attributes/{name}": {
                "GET": 1
            },
            "/v1/queryContext": {
                "POST": 1
            },
            "/v1/updateContext": {
                "POST": 1
            }
        }
    },
    "measuring_interval_in_secs": REGEX(\d+),
    "uptime_in_secs": REGEX(\d+)
}


--TEARDOWN--
brokerStop CB
dbDrop CB
