# Copyright 2021 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Per subscrition httpTimeout CRUD

--SHELL-INIT--
dbInit CB
brokerStart CB 0

--SHELL--

#
# 01. Create a subscrition with a correct httpTimeout field, get 204
# 02. GET /v2/subscriptions/ID
# 03. Modify the subscription changing httpTimeout, get 204
# 04. GET /v2/subscriptions/ID
# 05. Delete the subscription, get 204
# 06. Create a subscrition without httpTimeout field, get 201
# 07. GET /v2/subscriptions/ID
# 08. Create a subscrition with a negative httpTimeout field, get 400
# 09. Create a subscrition with a overranged httpTimeout field, get 400
# 10. Create a subscrition with a text httpTimeout field, get 400
#
#



echo "01. Create a subscrition with a correct httpTimeout field, get 204"
echo "=================================================================="
payload='
{
  "description": "HTTP sub",
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234",
      "httpTimeout":1000
    }
  }
}'

orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

idSubscription=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "02. GET /v2/subscriptions/ID"
echo "============================"
orionCurl --url "/v2/subscriptions/${idSubscription}"
echo
echo


echo "03. Modify the subscription changing httpTimeout, get 204"
echo "========================================================="
payload='
{
  "description": "HTTP sub",
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234",
      "httpTimeout":2000
    }
  }
}'

orionCurl --url "/v2/subscriptions/${idSubscription}" --payload "$payload" -X PATCH 
echo
echo



echo "04. GET /v2/subscriptions/ID"
echo "============================"
orionCurl --url "/v2/subscriptions/${idSubscription}"
echo
echo


echo "05. Delete the subscription, get 204"
echo "===================================="
orionCurl --url "/v2/subscriptions/${idSubscription}" --payload "$payload" -X DELETE 
echo
echo


echo "06. Create a subscrition without httpTimeout field, get 201"
echo "==========================================================="
payload='
{
  "description": "HTTP sub",
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234"
    }
  }
}'

orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

idSubscription=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")



echo "07. GET /v2/subscriptions/ID"
echo "============================"
orionCurl --url "/v2/subscriptions/${idSubscription}"
echo
echo


echo "08. Create a subscrition with a negative httpTimeout field, get 400"
echo "=================================================================="
payload='
{
  "description": "HTTP sub",
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234",
      "httpTimeout":-1000
    }
  }
}'

orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "09. Create a subscrition with a overranged httpTimeout field, get 400"
echo "====================================================================="
payload='
{
  "description": "HTTP sub",
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234",
      "httpTimeout":999999999
    }
  }
}'

orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

echo "10. Create a subscrition with a text httpTimeout field, get 400"
echo "==============================================================="
payload='
{
  "description": "HTTP sub",
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:1234",
      "httpTimeout":"textvalue"
    }
  }
}'

orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Create a subscrition with a correct httpTimeout field, get 204
==================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. GET /v2/subscriptions/ID
============================
HTTP/1.1 200 OK
Content-Length: 286
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "HTTP sub", 
    "id": "REGEX([0-9a-f]{24})", 
    "notification": {
        "attrs": [], 
        "attrsFormat": "normalized", 
        "http": {
            "httpTimeout": 1000, 
            "url": "http://localhost:1234"
        }, 
        "onlyChangedAttrs": false
    }, 
    "status": "active", 
    "subject": {
        "condition": {
            "attrs": []
        }, 
        "entities": [
            {
                "id": "E", 
                "type": "T"
            }
        ]
    }
}


03. Modify the subscription changing httpTimeout, get 204
=========================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. GET /v2/subscriptions/ID
============================
HTTP/1.1 200 OK
Content-Length: 286
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "HTTP sub", 
    "id": "REGEX([0-9a-f]{24})", 
    "notification": {
        "attrs": [], 
        "attrsFormat": "normalized", 
        "http": {
            "httpTimeout": 2000, 
            "url": "http://localhost:1234"
        }, 
        "onlyChangedAttrs": false
    }, 
    "status": "active", 
    "subject": {
        "condition": {
            "attrs": []
        }, 
        "entities": [
            {
                "id": "E", 
                "type": "T"
            }
        ]
    }
}


05. Delete the subscription, get 204
====================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Create a subscrition without httpTimeout field, get 201
===========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. GET /v2/subscriptions/ID
============================
HTTP/1.1 200 OK
Content-Length: 267
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "HTTP sub", 
    "id": "REGEX([0-9a-f]{24})", 
    "notification": {
        "attrs": [], 
        "attrsFormat": "normalized", 
        "http": {
            "url": "http://localhost:1234"
        }, 
        "onlyChangedAttrs": false
    }, 
    "status": "active", 
    "subject": {
        "condition": {
            "attrs": []
        }, 
        "entities": [
            {
                "id": "E", 
                "type": "T"
            }
        ]
    }
}


08. Create a subscrition with a negative httpTimeout field, get 400
==================================================================
HTTP/1.1 400 Bad Request
Content-Length: 96
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "httpTimeout field must be an integer between 0 and 300000", 
    "error": "BadRequest"
}
 

09. Create a subscrition with a overranged httpTimeout field, get 400
=====================================================================
HTTP/1.1 400 Bad Request
Content-Length: 96
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "httpTimeout field must be an integer between 0 and 300000", 
    "error": "BadRequest"
}


10. Create a subscrition with a text httpTimeout field, get 400
===============================================================
HTTP/1.1 400 Bad Request
Content-Length: 64
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "httpTimeout is not an int", 
    "error": "BadRequest"
}


--TEARDOWN--
brokerStop CB
dbDrop CB