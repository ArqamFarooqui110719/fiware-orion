# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh
# FIXME: this .test is planned to be improved and finalized in following PRs as a part of the work for #3001"

--NAME--
MQTT Notifications

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255 IPV4 -mqttHost localhost

--SHELL--
echo "01. POST /v2/entities, creating E1/T1"
echo "====================================="
payload='{
  "id": "E1",
  "type": "T1",
  "A1": {
    "value": 23,
    "type": "Float"
  },
  "A2": {
    "value": 720,
    "type": "Integer"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo

echo "02. Subscribe to E1 on condition A2"
echo "==================================="
payload='{
  "description": "Test subscription",
  "subject": {
    "entities": [
      {
        "id": "E1",
        "type": "T1"
      }
    ],
    "condition": {
      "attrs": [
        "A2"
      ]
    }
  },
  "notification": {
    "http": {
      "url": "mqtt://mqtttest.com"
    },
    "attrs": [
      "A1"
    ]
  },
  "expires": "2040-01-01T14:00:00.00Z",
  "throttling": 1
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo

echo "03. Update entity attribute A1 to trigger notification"
echo "======================================================"
payload='{
  "A1": {
    "value": 23,
    "type": "Float"
  },
  "A2": {
    "value": 520,
    "type": "Integer"
  }
}'
orionCurl --url /v2/entities/E1/attrs --payload "$payload" -X PATCH
echo
echo

--REGEXPECT--
01. POST /v2/entities, creating E1/T1
=====================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Subscribe to E1 on condition A2
===================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Update entity attribute A1 to trigger notification
======================================================
HTTP/1.1 204 No Content
Content-Length: 0
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



--TEARDOWN--
brokerStop CB
dbDrop CB
