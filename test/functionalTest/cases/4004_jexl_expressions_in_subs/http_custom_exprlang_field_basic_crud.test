# Copyright 2024 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Basic CRUD for exprLang field (http variant)

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create subscription with invalid exprLang, see error
# 02. Create subscription with exprLang jexl
# 03a. Get subscription and see exprLang jexl
# 03b. Get subscription (as a list) and see exprLang jexl
# 04. Update subscription with exprLang legacy
# 05a. Get subscription and see exprLang legacy
# 05b. Get subscription (as a list) and see exprLang legacy
# 06. Update subscription without exprLang
# 07a. Get subscription and see exprLang jexl
# 07b. Get subscription (as a list) and see exprLang jexl
# 08. Update subscription with exprLang legacy
# 09a. Get subscription and see exprLang legacy
# 09b. Get subscription (as a list) and see exprLang legacy
# 10. Update subscription with invalid exprLang, see error
# 11a. Get subscription and see exprLang legacy
# 11b. Get subscription (as a list) and see exprLang legacy
#

echo "01. Create subscription with invalid exprLang, see error"
echo "========================================================"
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://localhost:9998",
      "exprLang": "foo"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create subscription with exprLang jexl"
echo "=========================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ]
  },
  "notification": {
    "httpCustom": {
      "url": "http://localhost:9998",
      "exprLang": "jexl"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "03a. Get subscription and see exprLang jexl"
echo "==========================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "03b. Get subscription (as a list) and see exprLang jexl"
echo "======================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "04. Update subscription with exprLang legacy"
echo "============================================"
payload='{
  "notification": {
    "httpCustom": {
      "url": "http://localhost:9998",
      "exprLang": "legacy"
    }
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID --payload "$payload" -X PATCH
echo
echo


echo "05a. Get subscription and see exprLang legacy"
echo "============================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "05b. Get subscription (as a list) and see exprLang legacy"
echo "========================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "06. Update subscription without exprLang"
echo "========================================"
payload='{
  "notification": {
    "httpCustom": {
      "url": "http://localhost:9998",
      "topic": "orion"
    }
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID --payload "$payload" -X PATCH
echo
echo


echo "07a. Get subscription and see exprLang jexl"
echo "==========================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "07b. Get subscription (as a list) and see exprLang jexl"
echo "======================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "08. Update subscription with exprLang legacy"
echo "============================================"
payload='{
  "notification": {
    "httpCustom": {
      "url": "http://localhost:9998",
      "exprLang": "legacy"
    }
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID --payload "$payload" -X PATCH
echo
echo


echo "09a. Get subscription and see exprLang legacy"
echo "============================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "09b. Get subscription (as a list) and see exprLang legacy"
echo "========================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "10. Update subscription with invalid exprLang, see error"
echo "========================================================"
payload='{
  "notification": {
    "httpCustom": {
      "url": "http://localhost:9998",
      "exprLang": 42
    }
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID --payload "$payload" -X PATCH
echo
echo


echo "11a. Get subscription and see exprLang legacy"
echo "============================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "11b. Get subscription (as a list) and see exprLang legacy"
echo "========================================================="
orionCurl --url /v2/subscriptions
echo
echo

--REGEXPECT--
01. Create subscription with invalid exprLang, see error
========================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 88

{
    "description": "not valid exprLang, valid ones are jexl or legacy",
    "error": "BadRequest"
}


02. Create subscription with exprLang jexl
==========================================
HTTP/1.1 201 Created
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Content-Length: 0



03a. Get subscription and see exprLang jexl
===========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 320

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "httpCustom": {
            "exprLang": "jexl",
            "url": "http://localhost:9998"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


03b. Get subscription (as a list) and see exprLang jexl
=======================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 322

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "httpCustom": {
                "exprLang": "jexl",
                "url": "http://localhost:9998"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


04. Update subscription with exprLang legacy
============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



05a. Get subscription and see exprLang legacy
=============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 322

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "httpCustom": {
            "exprLang": "legacy",
            "url": "http://localhost:9998"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


05b. Get subscription (as a list) and see exprLang legacy
=========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 324

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "httpCustom": {
                "exprLang": "legacy",
                "url": "http://localhost:9998"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


06. Update subscription without exprLang
========================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



07a. Get subscription and see exprLang jexl
===========================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 320

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "httpCustom": {
            "exprLang": "jexl",
            "url": "http://localhost:9998"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


07b. Get subscription (as a list) and see exprLang jexl
=======================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 322

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "httpCustom": {
                "exprLang": "jexl",
                "url": "http://localhost:9998"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


08. Update subscription with exprLang legacy
============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})



09a. Get subscription and see exprLang legacy
=============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 322

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "httpCustom": {
            "exprLang": "legacy",
            "url": "http://localhost:9998"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


09b. Get subscription (as a list) and see exprLang legacy
=========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 324

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "httpCustom": {
                "exprLang": "legacy",
                "url": "http://localhost:9998"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


10. Update subscription with invalid exprLang, see error
========================================================
HTTP/1.1 400 Bad Request
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 87

{
    "description": "exprLang httpCustom notification is not a string",
    "error": "BadRequest"
}


11a. Get subscription and see exprLang legacy
=============================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 322

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "covered": false,
        "httpCustom": {
            "exprLang": "legacy",
            "url": "http://localhost:9998"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "notifyOnMetadataChange": true
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


11b. Get subscription (as a list) and see exprLang legacy
=========================================================
HTTP/1.1 200 OK
Date: REGEX(.*)
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Content-Type: application/json
Content-Length: 324

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "covered": false,
            "httpCustom": {
                "exprLang": "legacy",
                "url": "http://localhost:9998"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "notifyOnMetadataChange": true
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
