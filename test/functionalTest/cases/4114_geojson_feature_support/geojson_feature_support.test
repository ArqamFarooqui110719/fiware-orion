# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GeoJSON Feature support

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create entity with geo:json using Feature type
# 02. Get entity and see Feature
# 03. Geoquery covering the location returns the entity
#

echo "01. Create entity with geo:json using Feature type"
echo "=================================================="
payload='{
  "id": "E",
  "type": "T",
  "location": {
    "value": {
      "type": "Feature",
      "geometry": {
        "type": "Point",
        "coordinates": [
            -3.6127119138731127,
            40.53901978067972
        ]
      },
      "properties": {
        "label": "-3.6127119138731127, 40.53901978067972"
      }
    },
    "type": "geo:json"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo "02. Get entity and see Feature"
echo "=============================="
orionCurl --url /v2/entities/E
echo
echo


echo "03. Geoquery covering the location returns the entity"
echo "====================================================="
orionCurl --url '/v2/entities?georel=near;maxDistance:1&geometry=point&coords=40.539019,-3.612711'
echo
echo


--REGEXPECT--
01. Create entity with geo:json using Feature type
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Get entity and see Feature
==============================
HTTP/1.1 200 OK
Content-Length: 227
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "E",
    "location": {
        "metadata": {},
        "type": "geo:json",
        "value": {
            "geometry": {
                "coordinates": [
                    -3.612711914,
                    40.539019781
                ],
                "type": "Point"
            },
            "properties": {
                "label": "-3.6127119138731127, 40.53901978067972"
            },
            "type": "Feature"
        }
    },
    "type": "T"
}


03. Geoquery covering the location returns the entity
=====================================================
HTTP/1.1 200 OK
Content-Length: 229
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "id": "E",
        "location": {
            "metadata": {},
            "type": "geo:json",
            "value": {
                "geometry": {
                    "coordinates": [
                        -3.612711914,
                        40.539019781
                    ],
                    "type": "Point"
                },
                "properties": {
                    "label": "-3.6127119138731127, 40.53901978067972"
                },
                "type": "Feature"
            }
        },
        "type": "T"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
