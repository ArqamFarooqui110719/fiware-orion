# Copyright 2022 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Basic CRUD operations for subscriptions operations field

--SHELL-INIT--
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create subscription with invalid operations, see error
# 02. Create subscription with operations entityDelete and entityCreate
# 03a. Get subscription and see operations entityDelete and entityCreate
# 03b. Get subscription (as a list) and see operations entityDelete and entityCreate
# 04. Update subscription with operations entityChange
# 05a. Get subscription and see operations entityChange
# 05b. Get subscription (as a list) and see operations entityChange
# 06. Update subscription without operations
# 07a. Get subscription and not see operations
# 07b. Get subscription (as a list) and not see operations
#

echo "01. Create subscription with invalid operations, see error"
echo "=========================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ],
    "condition": {
      "operations": [ "entityFoo" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo "02. Create subscription with operations entityDelete and entityCreate"
echo "====================================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ],
    "condition": {
      "operations": [ "entityDelete", "entityCreate" ]
    }
  },
  "notification": {
    "http": {
      "url": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


SUB_ID=$(echo "$_responseHeaders" | grep Location | awk -F/ '{ print $4 }' | tr -d "\r\n")


echo "03a. Get subscription and see operations entityDelete and entityCreate"
echo "======================================================================"
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "03b. Get subscription (as a list) and see operations entityDelete and entityCreate"
echo "=================================================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "04. Update subscription with operations entityChange"
echo "===================================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ],
    "condition": {
      "operations": [ "entityChange" ]
    }
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID --payload "$payload" -X PATCH
echo
echo


echo "05a. Get subscription and see operations entityChange"
echo "====================================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "05b. Get subscription (as a list) and see operations entityChange"
echo "================================================================="
orionCurl --url /v2/subscriptions
echo
echo


echo "06. Update subscription without operations"
echo "=========================================="
payload='{
  "subject": {
    "entities": [
      {
        "idPattern" : ".*",
        "type": "T"
      }
    ]
  }
}'
orionCurl --url /v2/subscriptions/$SUB_ID --payload "$payload" -X PATCH
echo
echo


echo "07a. Get subscription and not see operations"
echo "==========================================="
orionCurl --url /v2/subscriptions/$SUB_ID
echo
echo


echo "07b. Get subscription (as a list) and not see operations"
echo "========================================================"
orionCurl --url /v2/subscriptions
echo
echo


--REGEXPECT--
01. Create subscription with invalid operations, see error
==========================================================
HTTP/1.1 400 Bad Request
Content-Length: 80
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "unknown subscription operation: entityFoo",
    "error": "BadRequest"
}


02. Create subscription with operations entityDelete and entityCreate
=====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03a. Get subscription and see operations entityDelete and entityCreate
======================================================================
HTTP/1.1 200 OK
Content-Length: 302
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "http": {
            "url": "http://127.0.0.1:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "operations": [
                "entityDelete",
                "entityCreate"
            ]
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


03b. Get subscription (as a list) and see operations entityDelete and entityCreate
==================================================================================
HTTP/1.1 200 OK
Content-Length: 304
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "http": {
                "url": "http://127.0.0.1:9997/notify"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "operations": [
                    "entityDelete",
                    "entityCreate"
                ]
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


04. Update subscription with operations entityChange
====================================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05a. Get subscription and see operations entityChange
=====================================================
HTTP/1.1 200 OK
Content-Length: 287
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "http": {
            "url": "http://127.0.0.1:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": [],
            "operations": [
                "entityChange"
            ]
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


05b. Get subscription (as a list) and see operations entityChange
=================================================================
HTTP/1.1 200 OK
Content-Length: 289
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "http": {
                "url": "http://127.0.0.1:9997/notify"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": [],
                "operations": [
                    "entityChange"
                ]
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


06. Update subscription without operations
==========================================
HTTP/1.1 204 No Content
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07a. Get subscription and not see operations
===========================================
HTTP/1.1 200 OK
Content-Length: 257
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "id": "REGEX([0-9a-f]{24})",
    "notification": {
        "attrs": [],
        "attrsFormat": "normalized",
        "http": {
            "url": "http://127.0.0.1:9997/notify"
        },
        "onlyChangedAttrs": false
    },
    "status": "active",
    "subject": {
        "condition": {
            "attrs": []
        },
        "entities": [
            {
                "idPattern": ".*",
                "type": "T"
            }
        ]
    }
}


07b. Get subscription (as a list) and not see operations
========================================================
HTTP/1.1 200 OK
Content-Length: 259
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "id": "REGEX([0-9a-f]{24})",
        "notification": {
            "attrs": [],
            "attrsFormat": "normalized",
            "http": {
                "url": "http://127.0.0.1:9997/notify"
            },
            "onlyChangedAttrs": false
        },
        "status": "active",
        "subject": {
            "condition": {
                "attrs": []
            },
            "entities": [
                {
                    "idPattern": ".*",
                    "type": "T"
                }
            ]
        }
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
